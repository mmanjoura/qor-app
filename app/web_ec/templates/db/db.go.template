package db

import (
	"fmt"

	"github.com/jinzhu/gorm"
	"github.com/qor/media_library"
	_ "github.com/jinzhu/gorm/dialects/mysql"
	_ "github.com/jinzhu/gorm/dialects/postgres"
	_ "github.com/jinzhu/gorm/dialects/sqlite"
	"{{package_path}}/config"
)

var DB *gorm.DB

func init() {
	var DBConfig = config.Config.DB
	var err error

	switch DBConfig.Adapter {
	case "sqlite", "sqlite3":
		DB, err = gorm.Open("sqlite3", DBConfig.Name + ".db")
	case "mysql":
		DB, err = gorm.Open(DBConfig.Adapter, fmt.Sprintf("%v:%v@%v/%v?charset=utf8&parseTime=True", DBConfig.User, DBConfig.Password, DBConfig.Host, DBConfig.Name))
	case "postgres":
		DB, err = gorm.Open(DBConfig.Adapter, fmt.Sprintf("postgres://%v:%v@%v/%v?sslmode=verify-full", DBConfig.User, DBConfig.Password, DBConfig.Host, DBConfig.Name))
	}

	if err != nil {
		panic(err)
	} else {
		media_library.RegisterCallbacks(DB)
    }
}
